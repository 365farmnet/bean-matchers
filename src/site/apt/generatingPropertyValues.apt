Generating Property Values

  The Bean Matchers library generates values to populate beans while performing various tests.
  Out of the box Bean Matchers will generate random values for properties of primitive, array
  and enum type. It will delegate to {{{http://mockito.org}Mockito}} to create a mock for
  non-final types. For final types, one can implement and register a
  {{{./apidocs/com/google/code/beanmatchers/ValueGenerator.html} ValueGenerator}} to generate
  random values.

  For example say we have defined a value type:

+---
public final class MyCustomValueType {
    private final String value;

    public MyCustomValueType(String value) {
        this.value = value;
    }
    ...
}
+---

  We have a bean with a property of our value type:

+---
public class MyBean {
    private MyCustomValueType property;

    public MyCustomValueType getProperty() {
        return property;
    }

    public void setProperty(MyCustomValueType property) {
        this.property = property;
    }
    ...
}
+---

  To test this bean we need to register a <<<ValueGenerator>>> that can generate
  random values to populate the bean with:

+---
BeanMatchers.registerValueGenerator(new ValueGenerator<MyCustomValueType>() {
        public MyCustomValueType generate() {
            return new MyCustomValueType(StringUtils.randomString());
        }
    }, MyCustomValueType.class);
+---
